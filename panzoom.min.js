/**
 * Panzoom for panning and zooming elements using CSS transforms
 * Copyright Timmy Willison and other contributors
 * https://github.com/timmywil/panzoom/blob/master/MIT-License.txt
 */
!(function (t, e) {
  "object" == typeof exports && "undefined" != typeof module
    ? (module.exports = e())
    : "function" == typeof define && define.amd
    ? define(e)
    : ((t = "undefined" != typeof globalThis ? globalThis : t || self).Panzoom =
        e());
})(this, function () {
  "use strict";
  var C = function () {
    return (C =
      Object.assign ||
      function (t) {
        for (var e, n = 1, o = arguments.length; n < o; n++)
          for (var r in (e = arguments[n]))
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return t;
      }).apply(this, arguments);
  };
  function T(t, e) {
    for (var n = t.length; n--; ) if (t[n].pointerId === e.pointerId) return n;
    return -1;
  }
  function N(t, e) {
    if (e.touches)
      for (var n = 0, o = 0, r = e.touches; o < r.length; o++) {
        var a = r[o];
        (a.pointerId = n++), N(t, a);
      }
    else -1 < (n = T(t, e)) && t.splice(n, 1), t.push(e);
  }
  function L(t) {
    for (var e, n = (t = t.slice(0)).pop(); (e = t.pop()); )
      n = {
        clientX: (e.clientX - n.clientX) / 2 + n.clientX,
        clientY: (e.clientY - n.clientY) / 2 + n.clientY,
      };
    return n;
  }
  function I(t) {
    if (t.length < 2) return 0;
    var e = t[0],
      t = t[1];
    return Math.sqrt(
      Math.pow(Math.abs(t.clientX - e.clientX), 2) +
        Math.pow(Math.abs(t.clientY - e.clientY), 2)
    );
  }
  "undefined" != typeof window &&
    (window.NodeList &&
      !NodeList.prototype.forEach &&
      (NodeList.prototype.forEach = Array.prototype.forEach),
    "function" != typeof window.CustomEvent &&
      (window.CustomEvent = function (t, e) {
        e = e || { bubbles: !1, cancelable: !1, detail: null };
        var n = document.createEvent("CustomEvent");
        return n.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), n;
      }));
  var V = { down: "mousedown", move: "mousemove", up: "mouseup mouseleave" };
  function W(t, e, n, o) {
    V[t].split(" ").forEach(function (t) {
      e.addEventListener(t, n, o);
    });
  }
  function Z(t, e, n) {
    V[t].split(" ").forEach(function (t) {
      e.removeEventListener(t, n);
    });
  }
  "undefined" != typeof window &&
    ("function" == typeof window.PointerEvent
      ? (V = {
          down: "pointerdown",
          move: "pointermove",
          up: "pointerup pointerleave pointercancel",
        })
      : "function" == typeof window.TouchEvent &&
        (V = {
          down: "touchstart",
          move: "touchmove",
          up: "touchend touchcancel",
        }));
  var a,
    i = "undefined" != typeof document && !!document.documentMode;
  var l = ["webkit", "moz", "ms"],
    c = {};
  function q(t) {
    if (c[t]) return c[t];
    var e = (a = a || document.createElement("div").style);
    if (t in e) return (c[t] = t);
    for (var n = t[0].toUpperCase() + t.slice(1), o = l.length; o--; ) {
      var r = "" + l[o] + n;
      if (r in e) return (c[t] = r);
    }
  }
  function r(t, e) {
    return parseFloat(e[q(t)]) || 0;
  }
  function s(t, e, n) {
    var o = "border" === e ? "Width" : "";
    return {
      left: r(
        e + "Left" + o,
        (n = void 0 === n ? window.getComputedStyle(t) : n)
      ),
      right: r(e + "Right" + o, n),
      top: r(e + "Top" + o, n),
      bottom: r(e + "Bottom" + o, n),
    };
  }
  function B(t, e, n) {
    t.style[q(e)] = n;
  }
  function D(t) {
    var e = t.parentNode,
      n = window.getComputedStyle(t),
      o = window.getComputedStyle(e),
      r = t.getBoundingClientRect(),
      a = e.getBoundingClientRect();
    return {
      elem: {
        style: n,
        width: r.width,
        height: r.height,
        top: r.top,
        bottom: r.bottom,
        left: r.left,
        right: r.right,
        margin: s(t, "margin", n),
        border: s(t, "border", n),
      },
      parent: {
        style: o,
        width: a.width,
        height: a.height,
        top: a.top,
        bottom: a.bottom,
        left: a.left,
        right: a.right,
        padding: s(e, "padding", o),
        border: s(e, "border", o),
      },
    };
  }
  var F = /^http:[\w\.\/]+svg$/;
  var G = {
    animate: !1,
    canvas: !1,
    cursor: "move",
    disablePan: !1,
    disableZoom: !1,
    disableXAxis: !1,
    disableYAxis: !1,
    duration: 200,
    easing: "ease-in-out",
    exclude: [],
    excludeClass: "panzoom-exclude",
    handleStartEvent: function (t) {
      t.preventDefault(), t.stopPropagation();
    },
    maxScale: 4,
    minScale: 0.125,
    overflow: "hidden",
    panOnlyWhenZoomed: !1,
    relative: !1,
    setTransform: function (t, e, n) {
      var o = e.x,
        r = e.y,
        a = e.scale,
        e = e.isSVG;
      B(t, "transform", "scale(" + a + ") translate(" + o + "px, " + r + "px)"),
        e &&
          i &&
          ((e = window.getComputedStyle(t).getPropertyValue("transform")),
          t.setAttribute("transform", e));
    },
    startX: 0,
    startY: 0,
    startScale: 1,
    step: 0.3,
    touchAction: "none",
  };
  function t(c, l) {
    if (!c) throw new Error("Panzoom requires an element as an argument");
    if (1 !== c.nodeType)
      throw new Error("Panzoom requires an element with a nodeType of 1");
    if (
      ((t = (e = c).ownerDocument),
      (e = e.parentNode),
      !(
        t &&
        e &&
        9 === t.nodeType &&
        1 === e.nodeType &&
        t.documentElement.contains(e)
      ))
    )
      throw new Error(
        "Panzoom should be called on elements that have been attached to the DOM"
      );
    var t;
    l = C(C({}, G), l);
    var e,
      s =
        ((e = c), F.test(e.namespaceURI) && "svg" !== e.nodeName.toLowerCase()),
      n = c.parentNode;
    (n.style.overflow = l.overflow),
      (n.style.userSelect = "none"),
      (n.style.touchAction = l.touchAction),
      ((l.canvas ? n : c).style.cursor = l.cursor),
      (c.style.userSelect = "none"),
      (c.style.touchAction = l.touchAction),
      B(
        c,
        "transformOrigin",
        "string" == typeof l.origin ? l.origin : s ? "0 0" : "50% 50%"
      );
    var o,
      r,
      a,
      i,
      p,
      d,
      u = 0,
      f = 0,
      m = 1,
      h = !1;
    function v(t, e, n) {
      n.silent || ((e = new CustomEvent(t, { detail: e })), c.dispatchEvent(e));
    }
    function g(t, e, n) {
      var o = { x: u, y: f, scale: m, isSVG: s, originalEvent: n };
      return (
        requestAnimationFrame(function () {
          var t;
          "boolean" == typeof e.animate &&
            (e.animate
              ? ((t = e),
                B(
                  c,
                  "transition",
                  q("transform") + " " + t.duration + "ms " + t.easing
                ))
              : B(c, "transition", "none")),
            e.setTransform(c, o, e);
        }),
        v(t, o, e),
        v("panzoomchange", o, e),
        o
      );
    }
    function y() {
      var t, e, n;
      l.contain &&
        ((e =
          (n = D(c)).parent.width -
          n.parent.border.left -
          n.parent.border.right),
        (t = n.parent.height - n.parent.border.top - n.parent.border.bottom),
        (e = e / (n.elem.width / m)),
        (n = t / (n.elem.height / m)),
        "inside" === l.contain
          ? (l.maxScale = Math.min(e, n))
          : "outside" === l.contain && (l.minScale = Math.max(e, n)));
    }
    function w(t, e, n, o) {
      var r,
        a = C(C({}, l), o),
        i = { x: u, y: f, opts: a };
      return (
        (!a.force &&
          (a.disablePan || (a.panOnlyWhenZoomed && m === a.startScale))) ||
          ((t = parseFloat(t)),
          (e = parseFloat(e)),
          a.disableXAxis || (i.x = (a.relative ? u : 0) + t),
          a.disableYAxis || (i.y = (a.relative ? f : 0) + e),
          "inside" === a.contain
            ? ((r = D(c)),
              (i.x = Math.max(
                -r.elem.margin.left - r.parent.padding.left,
                Math.min(
                  r.parent.width -
                    r.elem.width / n -
                    r.parent.padding.left -
                    r.elem.margin.left -
                    r.parent.border.left -
                    r.parent.border.right,
                  i.x
                )
              )),
              (i.y = Math.max(
                -r.elem.margin.top - r.parent.padding.top,
                Math.min(
                  r.parent.height -
                    r.elem.height / n -
                    r.parent.padding.top -
                    r.elem.margin.top -
                    r.parent.border.top -
                    r.parent.border.bottom,
                  i.y
                )
              )))
            : "outside" === a.contain &&
              ((o = (r = D(c)).elem.width / m),
              (a = ((e = (t = r.elem.height / m) * n) - t) / 2),
              (o =
                (-((t = o * n) - r.parent.width) -
                  r.parent.padding.left -
                  r.parent.border.left -
                  r.parent.border.right +
                  (t = (t - o) / 2)) /
                n),
              (t = (t - r.parent.padding.left) / n),
              (i.x = Math.max(Math.min(i.x, t), o)),
              (e =
                (-(e - r.parent.height) -
                  r.parent.padding.top -
                  r.parent.border.top -
                  r.parent.border.bottom +
                  a) /
                n),
              (n = (a - r.parent.padding.top) / n),
              (i.y = Math.max(Math.min(i.y, n), e)))),
        i
      );
    }
    function b(t, e) {
      var n = C(C({}, l), e),
        e = { scale: m, opts: n };
      return (
        (!n.force && n.disableZoom) ||
          (e.scale = Math.min(Math.max(t, n.minScale), n.maxScale)),
        e
      );
    }
    function x(t, e, n, o) {
      (e = w(t, e, m, n)), (n = e.opts);
      return (u = e.x), (f = e.y), g("panzoompan", n, o);
    }
    function S(t, e, n) {
      var o = b(t, e),
        r = o.opts;
      if (r.force || !r.disableZoom) {
        t = o.scale;
        var a = u,
          e = f;
        r.focal &&
          ((a = ((o = r.focal).x / t - o.x / m + u * t) / t),
          (e = (o.y / t - o.y / m + f * t) / t));
        e = w(a, e, t, { relative: !1, force: !0 });
        return (u = e.x), (f = e.y), (m = t), g("panzoomzoom", r, n);
      }
    }
    function E(t, e) {
      e = C(C(C({}, l), { animate: !0 }), e);
      return S(m * Math.exp((t ? 1 : -1) * e.step), e);
    }
    function O(t, e, n, o) {
      var r = D(c),
        a =
          r.parent.width -
          r.parent.padding.left -
          r.parent.padding.right -
          r.parent.border.left -
          r.parent.border.right,
        i =
          r.parent.height -
          r.parent.padding.top -
          r.parent.padding.bottom -
          r.parent.border.top -
          r.parent.border.bottom,
        l =
          e.clientX -
          r.parent.left -
          r.parent.padding.left -
          r.parent.border.left -
          r.elem.margin.left,
        e =
          e.clientY -
          r.parent.top -
          r.parent.padding.top -
          r.parent.border.top -
          r.elem.margin.top;
      s || ((l -= r.elem.width / m / 2), (e -= r.elem.height / m / 2));
      i = { x: (l / a) * (a * t), y: (e / i) * (i * t) };
      return S(t, C(C({ animate: !1 }, n), { focal: i }), o);
    }
    S(l.startScale, { animate: !1 }),
      setTimeout(function () {
        y(), x(l.startX, l.startY, { animate: !1 });
      });
    var M = [];
    function P(t) {
      !(function (t, e) {
        for (var n, o, r = t; null != r; r = r.parentNode)
          if (
            ((n = r),
            (o = e.excludeClass),
            (1 === n.nodeType &&
              -1 <
                (" " + (n.getAttribute("class") || "").trim() + " ").indexOf(
                  " " + o + " "
                )) ||
              -1 < e.exclude.indexOf(r))
          )
            return 1;
      })(t.target, l) &&
        (N(M, t),
        (h = !0),
        l.handleStartEvent(t),
        v(
          "panzoomstart",
          { x: (o = u), y: (r = f), scale: m, isSVG: s, originalEvent: t },
          l
        ),
        (t = L(M)),
        (a = t.clientX),
        (i = t.clientY),
        (p = m),
        (d = I(M)));
    }
    function A(t) {
      var e;
      h &&
        void 0 !== o &&
        void 0 !== r &&
        void 0 !== a &&
        void 0 !== i &&
        (N(M, t),
        (e = L(M)),
        1 < M.length && O(b(((I(M) - d) * l.step) / 80 + p).scale, e),
        x(
          o + (e.clientX - a) / m,
          r + (e.clientY - i) / m,
          { animate: !1 },
          t
        ));
    }
    function z(t) {
      1 === M.length &&
        v(
          "panzoomend",
          { x: u, y: f, scale: m, isSVG: s, originalEvent: t },
          l
        ),
        (function (t, e) {
          if (e.touches) for (; t.length; ) t.pop();
          else {
            e = T(t, e);
            -1 < e && t.splice(e, 1);
          }
        })(M, t),
        h && ((h = !1), (o = r = a = i = void 0));
    }
    var X = !1;
    function Y() {
      X ||
        ((X = !0),
        W("down", l.canvas ? n : c, P),
        W("move", document, A, { passive: !0 }),
        W("up", document, z, { passive: !0 }));
    }
    return (
      l.noBind || Y(),
      {
        bind: Y,
        destroy: function () {
          (X = !1),
            Z("down", l.canvas ? n : c, P),
            Z("move", document, A),
            Z("up", document, z);
        },
        eventNames: V,
        getPan: function () {
          return { x: u, y: f };
        },
        getScale: function () {
          return m;
        },
        getOptions: function () {
          return (function (t) {
            var e,
              n = {};
            for (e in t) t.hasOwnProperty(e) && (n[e] = t[e]);
            return n;
          })(l);
        },
        pan: x,
        reset: function (t) {
          var e = C(C(C({}, l), { animate: !0, force: !0 }), t);
          return (
            (m = b(e.startScale, e).scale),
            (t = w(e.startX, e.startY, m, e)),
            (u = t.x),
            (f = t.y),
            g("panzoomreset", e)
          );
        },
        resetStyle: function () {
          (n.style.overflow = ""),
            (n.style.userSelect = ""),
            (n.style.touchAction = ""),
            (n.style.cursor = ""),
            (c.style.cursor = ""),
            (c.style.userSelect = ""),
            (c.style.touchAction = ""),
            B(c, "transformOrigin", "");
        },
        setOptions: function (t) {
          for (var e in (t = void 0 === t ? {} : t))
            t.hasOwnProperty(e) && (l[e] = t[e]);
          (t.hasOwnProperty("cursor") || t.hasOwnProperty("canvas")) &&
            ((n.style.cursor = c.style.cursor = ""),
            ((l.canvas ? n : c).style.cursor = l.cursor)),
            t.hasOwnProperty("overflow") && (n.style.overflow = t.overflow),
            t.hasOwnProperty("touchAction") &&
              ((n.style.touchAction = t.touchAction),
              (c.style.touchAction = t.touchAction)),
            (t.hasOwnProperty("minScale") ||
              t.hasOwnProperty("maxScale") ||
              t.hasOwnProperty("contain")) &&
              y();
        },
        setStyle: function (t, e) {
          return B(c, t, e);
        },
        zoom: S,
        zoomIn: function (t) {
          return E(!0, t);
        },
        zoomOut: function (t) {
          return E(!1, t);
        },
        zoomToPoint: O,
        zoomWithWheel: function (t, e) {
          t.preventDefault();
          var n = C(C({}, l), e),
            e = 0 === t.deltaY && t.deltaX ? t.deltaX : t.deltaY;
          return O(
            b(m * Math.exp(((e < 0 ? 1 : -1) * n.step) / 3), n).scale,
            t,
            n
          );
        },
      }
    );
  }
  return (t.defaultOptions = G), t;
});
